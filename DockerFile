pipeline {
    agent any

    environment {
        APP_NAME     = "NumberGuessGame"
        WAR_FILE     = "target/NumberGuessGame.war"
        DOCKER_IMAGE = "numberguessgame:latest"
        APP_URL      = "http://56.228.21.75:8080"
        SONARQUBE    = "SonarQube"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Unit Tests') {
            steps {
                sh 'mvn test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube analysis...'
                withSonarQubeEnv("${SONARQUBE}") {
                    sh """
                        mvn sonar:sonar \
                            -Dsonar.projectKey=GuessingGameAppDocker \
                            -Dsonar.host.url=$SONAR_HOST_URL \
                            -Dsonar.token=$SONAR_AUTH_TOKEN
                    """
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    script {
                        def qg = waitForQualityGate()
                        echo "SonarQube Quality Gate status: ${qg.status}"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Run Docker Container') {
            steps {
                sh """
                docker stop ${APP_NAME} || true
                docker rm ${APP_NAME} || true
                docker run -d --name ${APP_NAME} -p 8080:8080 ${DOCKER_IMAGE}
                """
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully. Application deployed at ${APP_URL}"
        }
        failure {
            echo "Pipeline failed. Please check the logs."
        }
    }
}
